---
version: 2

jobs:
  build-and-package:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/golang:1.17
      - image: docker.mirror.hashicorp.services/localstack/localstack:latest
      - image: docker.mirror.hashicorp.services/letsencrypt/pebble
        command: ["pebble"]
        environment:
          PEBBLE_VA_NOSLEEP: 1
          PEBBLE_VA_ALWAYS_VALID: 1
      - image: circleci/postgres:11-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: horizon_test
      - image: vault
        command: ["server", "-dev", "-dev-root-token-id=hznroot"]
      - image: consul
        command: ["agent", "-dev", "-client=0.0.0.0"]

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    steps:
      - add_ssh_keys:
          fingerprints:
            ## hc-github-team-waypoint github "machine" user, which allows go to fetch
            ## source for private modules.
            ## hostname must be set to "github.com":
            ## https://circleci.com/docs/2.0/gh-bb-integration/#creating-a-github-user-key
            - "76:94:15:c8:a0:41:f0:8b:9b:f1:f7:36:4c:d5:7f:57"

      - checkout

      ## There's no great way to emulate TeamCity's BUILD_NUMBER, an
      ## atomically-increating integer that identifies which build is
      ## "after" another, without having to inspect the repository.
      ## Circle's `CIRCLE_BUILD_NUM` is not unique to the *workflow*, only
      ## to the *job*; so build-and-package can be 42 docker-push would be
      ## 43: presumably always greater, but not shared.
      ##
      ## Since this step is always run first, it gets to create the
      ## canonical build identifier.
      - run:
          name: Create unique build identifier
          command: |
            short_git_sha=$( git rev-parse --short HEAD )

            # the always-increasing counter, based on CIRCLE_BUILD_NUM
            BUILD_COUNTER="${CIRCLE_BUILD_NUM}"
            echo "export BUILD_COUNTER=${BUILD_COUNTER}" >> "${BASH_ENV}"

            # the build identifier, which includes the short git sha
            BUILD_NUMBER="${DOCKER_TAG_PREFIX}${BUILD_COUNTER}-${short_git_sha}"
            echo "export BUILD_NUMBER=${BUILD_NUMBER}" >> "${BASH_ENV}"

            # output build id and counter
            echo -e "\nbuild counter: ${BUILD_COUNTER}; build id: ${BUILD_NUMBER}\n"

      - run: sudo apt-get update
      - run: sudo apt-get install postgresql-client-13

      # specify any bash command here prefixed with `run: `
      - run: go get -v -t -d ./...
      - run:
          name: Waiting for Postgres to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Postgres && exit 1

      - run:
          name: Running tests
          command: |
            go test ./... -v -p 1

      - run:
          name: Persist build number
          command: cp "${BASH_ENV}" bash-env

      - persist_to_workspace:
          root: "."
          paths:
            - "*"

  docker-push:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/golang:1.17

    environment:
      ## this along with CIRCLE_BUILD_NUM and BUILD_NUMBER (computed) are used
      ## to uniquely identify tag Docker images.
      ## TODO: refactor these when TeamCity is no longer being used.
      DOCKER_TAG_PREFIX: b-

      DOCKER_URL: quay.io
      DOCKER_ORG: hashicorp

    steps:
      - attach_workspace:
          at: "."

      ## restore the computed build number into the environment
      - run:
          name: Restore build number
          command: cat bash-env >> "${BASH_ENV}"

      - setup_remote_docker:
          version: 18.09.3
          docker_layer_caching: true

      ## requires DOCKER_USER and DOCKER_PASS for DOCKER_URL to be set as
      ## secure environment variables.
      - run: make pkg-docker

workflows:
  version: 2
  build-and-upload:
    jobs:
      - build-and-package
      - docker-push:
          requires:
            - build-and-package
